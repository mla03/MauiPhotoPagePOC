//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace POCPictureGallery.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class AppResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("POCPictureGallery.Resources.AppResources", typeof(AppResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MIT License (MIT)
        ///
        ///Copyright (c) .NET Foundation and Contributors
        ///
        ///All Rights Reserved
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the fol [rest of string was truncated]&quot;;.
        /// </summary>
        public static string License_CommunityToolkitMessage {
            get {
                return ResourceManager.GetString("License_CommunityToolkitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CommunityToolkit.
        /// </summary>
        public static string License_CommunityToolkitTitle {
            get {
                return ResourceManager.GetString("License_CommunityToolkitTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MIT License (MIT)
        ///
        ///Copyright (c) 2007 James Newton-King
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        ///
        ///The above c [rest of string was truncated]&quot;;.
        /// </summary>
        public static string License_NewtonsoftJsonMessage {
            get {
                return ResourceManager.GetString("License_NewtonsoftJsonMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Newtonsoft.Json.
        /// </summary>
        public static string License_NewtonsoftJsonTitle {
            get {
                return ResourceManager.GetString("License_NewtonsoftJsonTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MIT License (MIT)
        ///
        ///Copyright (c) Krueger Systems, Inc.
        ///
        ///All Rights Reserved
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following cond [rest of string was truncated]&quot;;.
        /// </summary>
        public static string License_SqliteNetPlcMessage {
            get {
                return ResourceManager.GetString("License_SqliteNetPlcMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sqlite-net-pcl .
        /// </summary>
        public static string License_SqliteNetPlcTitle {
            get {
                return ResourceManager.GetString("License_SqliteNetPlcTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apache License
        ///Version 2.0, January 2004
        ///http://www.apache.org/licenses/
        ///
        ///TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
        ///
        ///1. Definitions.
        ///
        ///&quot;License&quot; shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.
        ///
        ///&quot;Licensor&quot; shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.
        ///
        ///&quot;Legal Entity&quot; shall mean the union of the acting entity and all other entities that contr [rest of string was truncated]&quot;;.
        /// </summary>
        public static string License_SQLitePCLRawMessage {
            get {
                return ResourceManager.GetString("License_SQLitePCLRawMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SQLitePCLRaw.
        /// </summary>
        public static string License_SQLitePCLRawTitle {
            get {
                return ResourceManager.GetString("License_SQLitePCLRawTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Permission to Camera not granted. 
        ///App need this permission to take pictures.
        ///If you do not get prompted, you need to manually accept the permission by going to: 
        ///&quot;Settings&quot;-&gt;&quot;Apps&quot;-&gt;&quot;App&quot;-&gt;&quot;Permissions&quot;.
        /// </summary>
        public static string Permission_Camera_Android {
            get {
                return ResourceManager.GetString("Permission_Camera_Android", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Permission to Camera not granted. 
        ///App need this permission to take pictures.
        ///You need to manually accept the permission by going to: 
        ///&quot;Settings&quot;-&gt;&quot;App&quot;-&gt;&quot;Allow App to Acces&quot;.
        /// </summary>
        public static string Permission_Camera_iOS {
            get {
                return ResourceManager.GetString("Permission_Camera_iOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App need this permission to access pictures.
        ///Try opening the camera again, and if you do not get prompted, you need to manually accept the permission by going to: 
        ///&quot;Settings&quot;-&gt;&quot;Apps&quot;-&gt;&quot;App&quot;-&gt;&quot;Permissions&quot;.
        /// </summary>
        public static string Permission_TakePicture {
            get {
                return ResourceManager.GetString("Permission_TakePicture", resourceCulture);
            }
        }
    }
}
